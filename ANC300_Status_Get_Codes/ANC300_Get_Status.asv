% ANC300 Getting status testing

% Establishing serial connection with ANC300 
%ANC300 = serialport("COM7",9600);

% Setting proper voltages, frequencies, and stepping modes
%fprintf(ANC300,"setm 3 gnd"); 
%fprintf(ANC300,"setv 1 12"); fprintf(ANC300,"setf 1 20"); fprintf(ANC300,"setm 1 stp"); 
%fprintf(ANC300,"setv 2 12"); fprintf(ANC300,"setf 2 20"); fprintf(ANC300,"setm 2 stp");  

% Number of steps to take
step_num = 250; 
serial_comd = sprintf("stepd 1 %d",step_num);

% % send serial command to step
fprintf(ANC300,serial_comd);
pause(0.2)
flush(ANC300) % getting rid of buffered text to prevent filling up 


% Waits until movement is safe 
axis = 1;
timeout = 45; 
function step_queue_improved(ANC300,axis,timeout)
    while voltage ~= "0.000000"
            serial_comd_get = sprintf("geto %d",axis);
            fprintf(ANC300,serial_comd_get); % Sending command to read current voltage output
            for i = 1:2
                serial_message = fscanf(ANC300); % reading current voltage output
                if i == 2
                    serial_message = string(serial_message);
                    serial_messages = strsplit(serial_message);
                    voltage = serial_messages(3); % extract voltage number from list
                end
            end
            flush(ANC300) % getting rid of buffered text to prevent filling up

            if toc > timeout % checking if stepping is going on longer then expected
            error("movement is taking longer then expected potential issue detected")
            end
            pause(0.2)
    end
    pause(0.5) %extra 0.5 second delay for safe keeping 
end

% ANC300 - obj that contains the serial port for the piezo
% Axis - axis of interest that is in movement (1 = x-axis, 2 = y-axis)
% timeout - how long the movement could take before timing out should be
% considered (unit seconds) 
    flush(ANC300) % flush previous undesirable data 
    voltage = 1; % Initialize voltage to a large number
    threshold = 0; % Set a small threshold for stopping

    tic
    
    while abs(voltage) > threshold  % Keep looping until voltage â‰ˆ 0
        serial_comd = sprintf("geto %d",axis);
        fprintf(ANC300,serial_comd); % Sending command to read current voltage output
        for i = 1:2
            serial_message = fscanf(ANC300); % reading current voltage output
            if i == 2
                serial_message = string(serial_message);
                serial_messages = strsplit(serial_message);
                voltage = str2num(serial_messages(3)); % extract voltage number from list
                fprintf("Voltage: %.2f V\n",voltage)
            end
        end
        flush(ANC300) % getting rid of buffered text to prevent filling up 
        if toc > timeout
            error("movement is taking longer then expected potential issue detected")
        end
        
    end
    pause(1) % extra pause just in case 
    
    disp("Voltage reached zero, stopping loop.");
